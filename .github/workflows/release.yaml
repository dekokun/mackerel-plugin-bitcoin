name: release
on:
  pull_request: {}
  push:
    branches:
    - main
    tags:
    - v*
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: setup go
      uses: actions/setup-go@v2
      with:
        go-version: 1.x
    - name: checkout
      uses: actions/checkout@v2
    - name: test
      run: go test -race -coverprofile coverage.out -covermode atomic ./...
    - name: Send coverage
      uses: codecov/codecov-action@v2
  test-docker:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1
    - name: Build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        platforms: |
          linux/amd64
          linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
  release-binary:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test, test-docker]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-and-push-docker-image:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test, test-docker]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Get version from tag
      id: get_version
      run: echo "::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}"
    - name: Build and push release image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        platforms: |
          linux/amd64
          linux/arm64
        push: true
        tags: |
          dekokun/mackerel-container-agent-bitcoin:latest
          dekokun/mackerel-container-agent-bitcoin:${{ steps.get_version.outputs.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
